{"code":"import { makeAutoObservable } from 'mobx';\r\nclass Store {\r\n    state = {};\r\n    init(models) {\r\n        let _this = this;\r\n        models.map((item) => {\r\n            const { namespace, state = {}, effects = [] } = item;\r\n            _this.state[namespace] = state;\r\n            Object.keys(effects).map(i => {\r\n                _this[`${namespace}/${i}`] = (val) => effects[i](val, { update: _this.update, get: _this.getState, dispatch: _this.dispatch });\r\n                return i;\r\n            });\r\n            return item;\r\n        });\r\n    }\r\n    getState = () => {\r\n        return this.state;\r\n    };\r\n    update = (props) => {\r\n        const { name, payload = {} } = props || {};\r\n        this.state[name] = {\r\n            ...this.state[name],\r\n            ...payload\r\n        };\r\n    };\r\n    dispatch = ({ type, payload }) => {\r\n        const _this = this;\r\n        _this[type](payload);\r\n    };\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n}\r\nexport const store = new Store();\r\n// const context = createContext({\r\n//   store\r\n// })\r\n// export const useStore = () => useContext(context)\r\n","references":["/Users/liuwei/Desktop/mobx-like-dva/node_modules/mobx/dist/mobx.d.ts"],"dts":{"name":"/Users/liuwei/Desktop/mobx-like-dva/node_modules/.cache/rollup-plugin-typescript2/placeholder/index.d.ts","writeByteOrderMark":false,"text":"export interface Model {\r\n    namespace: string;\r\n    state: {\r\n        [key: string]: any;\r\n    };\r\n    effects: any;\r\n}\r\nexport interface UpdateProps {\r\n    name: string;\r\n    payload: {\r\n        [key: string]: any;\r\n    };\r\n}\r\nexport interface dispatchProps {\r\n    type: string;\r\n    payload?: {\r\n        [key: string]: any;\r\n    } | string | number;\r\n}\r\nexport interface StoreIns {\r\n    state: {\r\n        [key: string]: any;\r\n    };\r\n    init: (models: Model[]) => void;\r\n    getState: () => ({\r\n        [key: string]: any;\r\n    });\r\n    update: (val: UpdateProps) => void;\r\n    dispatch: (val: dispatchProps) => void;\r\n    [key: string]: any;\r\n}\r\nexport declare const store: StoreIns;\r\n"}}
